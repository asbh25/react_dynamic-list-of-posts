{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["Loader","className","PostsList","postId","setPostId","posts","map","post","key","id","userId","title","type","onClick","BASE_URL","getPostComments","a","fetch","comments","json","then","result","data","filter","comment","removeComment","commentId","method","addComment","body","JSON","stringify","NewCommentForm","setComments","useState","userName","setUserName","email","setEmail","setBody","onSubmit","event","preventDefault","name","addCommentForm","value","required","placeholder","onChange","target","trim","getUserPosts","getPostDetails","PostDetails","setPost","commentsVisibility","setVisible","useEffect","postApi","commentsApi","length","App","setUserId","setPosts","api","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.200e9ec6.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from '../Loader';\nimport './PostsList.scss';\n\nexport const PostsList = ({ postId, setPostId, posts }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n    {!posts && (\n      <Loader />\n    )}\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          className=\"PostsList__item\"\n          key={post.id}\n        >\n          <div>\n            <b>\n              User #\n              {post.userId}\n              {' '}\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => (\n              postId === post.id ? setPostId(0) : setPostId(post.id)\n            )}\n          >\n            {postId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n  posts: PropTypes.arrayOf().isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}/comments`);\n\n  return comments.json()\n    .then(result => result.data.filter(comment => comment.postId === postId));\n};\n\nexport const removeComment = async(commentId) => {\n  const comment = await fetch(\n    `${BASE_URL}/comments/${commentId}`,\n    { method: 'DELETE' },\n  );\n\n  return comment.json()\n    .then(result => result.data);\n};\n\nexport const addComment = async comment => fetch(`${BASE_URL}/comments`, {\n  method: 'POST',\n  body: JSON.stringify(comment),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nimport { addComment, getPostComments } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const addCommentForm = (id, name, body, email) => {\n    addComment(id, name, body, email)\n      .then(() => {\n        getPostComments(id)\n          .then(setComments);\n      });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        if (body && userName && email) {\n          addCommentForm(postId, userName, email, body);\n\n          setUserName('');\n          setEmail('');\n          setBody('');\n        }\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={userName}\n          required\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => {\n            setUserName(target.value.trim());\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          required\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => {\n            setEmail(target.value.trim());\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          required\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => {\n            setBody(target.value.trim());\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const posts = await fetch(`${BASE_URL}/posts`);\n\n  if (userId) {\n    return posts.json()\n      .then(result => (\n        result.data.filter(post => post.userId === userId)));\n  }\n\n  return posts.json()\n    .then(result => result.data);\n};\n\nexport const getPostDetails = async(userId) => {\n  const posts = await fetch(`${BASE_URL}/posts/${userId}`);\n\n  return posts.json()\n    .then(result => result.data);\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport * as commentsApi from '../../api/comments';\nimport * as postApi from '../../api/posts';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [commentsVisibility, setVisible] = useState(false);\n\n  useEffect(() => {\n    postApi.getPostDetails(postId)\n      .then(setPost);\n    commentsApi.getPostComments(postId)\n      .then(setComments);\n  }, [postId]);\n\n  const deleteComment = (id) => {\n    commentsApi.removeComment(id)\n      .then(commentsApi.getPostComments(postId))\n      .then(setComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      {post && (\n        <>\n          <h2>{post.title}</h2>\n\n          <section className=\"PostDetails__post\">\n            <p>{post.body}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setVisible(!commentsVisibility)}\n            >\n              {commentsVisibility\n                ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`\n              }\n            </button>\n\n            {commentsVisibility && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={comment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.name}</p>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm setComments={setComments} />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport * as api from './api/posts';\n\nconst App = () => {\n  const [userId, setUserId] = useState();\n  const [postId, setPostId] = useState();\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    api.getUserPosts(+userId)\n      .then(setPosts);\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => setUserId(target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            postId={postId}\n            setPostId={setPostId}\n            posts={posts}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postId={postId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}